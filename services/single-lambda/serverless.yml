service: ${self:custom.defaults.service}
frameworkVersion: ${self:custom.defaults.version}
provider:
  name: aws
  runtime: ${self:custom.defaults.lambda.runtime}
  stage: ${self:custom.defaults.stage}
  region: ${self:custom.defaults.region}
  deploymentBucket:
    name: ${self:custom.defaults.service}-${self:provider.region}-${aws:accountId}
    serverSideEncryption: AES256
  apiGateway:
    restApiId: ${param:API_GATEWAY_REST_API_ID}
    restApiRootResourceId: ${param:API_GATEWAY_REST_API_ROOT_RESOURCE_ID}
  tracing:
    lambda: true
custom:
  base: ${self:service}-${self:provider.stage}
  defaults: ${file(../../defaults/cloudgto.yml):defaults}
  webpack:
    webpackConfig: ../../webpack.config.js
  prune:
    automatic: true
    number: 2
functions:
  items:
    handler: src/handlers/items.handler
    timeout: 30
    runtime: nodejs16.x
    memorySize: 1536
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:BatchGetItem
          - dynamodb:DescribeTable
          - dynamodb:PutItem
          - dynamodb:BatchWriteItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${param:DYNAMODB_TABLE_SINGLE-LAMBDA-DDB}
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTraceSegment
          - xray:PutTelemetryRecords
          - xray:GetSamplingRules
          - xray:GetSamplingTargets
          - xray:GetSamplingStatisticSummaries
        Resource: "*"
    environment:
      DYNAMODB_TABLE: ${param:DYNAMODB_TABLE_SINGLE-LAMBDA-DDB}
    events:
      - http:
          path: /items
          method: POST
          cors: true
          private: true
          authorizer:
            arn: ${file(../../defaults/cloudgto.yml):cognito.userPoolArn}
      - http:
          path: /items/{id}
          method: GET
          cors: true
          private: true
          authorizer:
            arn: ${file(../../defaults/cloudgto.yml):cognito.userPoolArn}
      - http:
          path: /items/{id}
          method: PUT
          cors: true
          private: true
          authorizer:
            arn: ${file(../../defaults/cloudgto.yml):cognito.userPoolArn}
      - http:
          path: /items/{id}
          method: DELETE
          cors: true
          private: true
          authorizer:
            arn: ${file(../../defaults/cloudgto.yml):cognito.userPoolArn}
      - http:
          path: /items
          method: GET
          cors: true
          private: true
          authorizer:
            arn: ${file(../../defaults/cloudgto.yml):cognito.userPoolArn}
plugins:
  - serverless-offline
  - serverless-deployment-bucket
  - serverless-iam-roles-per-function
  - serverless-webpack
  - serverless-prune-plugin
package:
  individually: true
